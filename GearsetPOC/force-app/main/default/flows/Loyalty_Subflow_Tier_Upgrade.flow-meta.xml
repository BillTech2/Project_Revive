<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <actionCalls>
        <name>Avantage</name>
        <label>Avantage</label>
        <locationX>446</locationX>
        <locationY>1274</locationY>
        <actionName>9NY3z000000000BNotFound</actionName>
        <actionType>runProgramProcess</actionType>
        <connector>
            <targetReference>Check_What_Triggered_FLow</targetReference>
        </connector>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>MemberId</name>
            <value>
                <elementReference>vLPMId</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>NewTier</name>
            <value>
                <elementReference>Get_Avantage_Tier.Name</elementReference>
            </value>
        </inputParameters>
        <storeOutputAutomatically>true</storeOutputAutomatically>
        <versionSegment>1</versionSegment>
    </actionCalls>
    <actionCalls>
        <name>Carte_Blanche</name>
        <label>Carte Blanche</label>
        <locationX>710</locationX>
        <locationY>1274</locationY>
        <actionName>9NY3z000000000BNotFound</actionName>
        <actionType>runProgramProcess</actionType>
        <connector>
            <targetReference>Check_What_Triggered_FLow</targetReference>
        </connector>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>MemberId</name>
            <value>
                <elementReference>vLPMId</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>NewTier</name>
            <value>
                <elementReference>Get_Carte_blanche_Tier.Name</elementReference>
            </value>
        </inputParameters>
        <storeOutputAutomatically>true</storeOutputAutomatically>
        <versionSegment>1</versionSegment>
    </actionCalls>
    <actionCalls>
        <name>Etoile</name>
        <label>Etoile</label>
        <locationX>974</locationX>
        <locationY>1274</locationY>
        <actionName>9NY3z000000000BNotFound</actionName>
        <actionType>runProgramProcess</actionType>
        <connector>
            <targetReference>Check_What_Triggered_FLow</targetReference>
        </connector>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>MemberId</name>
            <value>
                <elementReference>vLPMId</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>NewTier</name>
            <value>
                <elementReference>Get_Etoile_Tier.Name</elementReference>
            </value>
        </inputParameters>
        <storeOutputAutomatically>true</storeOutputAutomatically>
        <versionSegment>1</versionSegment>
    </actionCalls>
    <apiVersion>58.0</apiVersion>
    <assignments>
        <name>Assign_Reason_for_Change</name>
        <label>Assign Reason for Change</label>
        <locationX>446</locationX>
        <locationY>1574</locationY>
        <assignmentItems>
            <assignToReference>vReasonForChange</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>Purchase a Ticket</stringValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Update_Member_Tier</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Assign_Reason_for_Change1</name>
        <label>Assign Reason for Change</label>
        <locationX>710</locationX>
        <locationY>1574</locationY>
        <assignmentItems>
            <assignToReference>vReasonForChange</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>Manual Points Adjustment</stringValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Update_Member_Tier</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Assign_Reason_for_Change2</name>
        <label>Assign Reason for Change</label>
        <locationX>974</locationX>
        <locationY>1574</locationY>
        <assignmentItems>
            <assignToReference>vReasonForChange</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>Cancellation of a Ticket</stringValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Update_Member_Tier</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Assign_Sequence_Number</name>
        <label>Assign Sequence Number</label>
        <locationX>1634</locationX>
        <locationY>782</locationY>
        <assignmentItems>
            <assignToReference>vOldTierSequenceNumber</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>vOldMemberTierNumber</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Check_Tier</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Assign_Sequence_Number1</name>
        <label>Assign Sequence Number</label>
        <locationX>50</locationX>
        <locationY>782</locationY>
        <assignmentItems>
            <assignToReference>vOldTierSequenceNumber</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Get_LPM.Manual_Tier_Immunity_Level__r.SequenceNumber</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Check_Tier</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Assign_Sequence_Number2</name>
        <label>Assign Sequence Number</label>
        <locationX>314</locationX>
        <locationY>782</locationY>
        <assignmentItems>
            <assignToReference>vOldTierSequenceNumber</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Get_LPM.Subscription_Tier_Immunity_Level__r.SequenceNumber</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Check_Tier</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Remain_in_Same_Tier_Assignment</name>
        <label>Remain in Same Tier Assignment</label>
        <locationX>1238</locationX>
        <locationY>1274</locationY>
        <assignmentItems>
            <assignToReference>vRemainInTier</assignToReference>
            <operator>Assign</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Check_What_Triggered_FLow</targetReference>
        </connector>
    </assignments>
    <decisions>
        <name>Check_Higher_Tier_Sequence_Nr</name>
        <label>Check Higher Tier Sequence Nr</label>
        <locationX>974</locationX>
        <locationY>782</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Manual_Higher</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Get_LPM.Manual_Tier_Immunity_Level__r.SequenceNumber</leftValueReference>
                <operator>GreaterThan</operator>
                <rightValue>
                    <elementReference>Get_LPM.Subscription_Tier_Immunity_Level__r.SequenceNumber</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <isGoTo>true</isGoTo>
                <targetReference>Assign_Sequence_Number1</targetReference>
            </connector>
            <label>Manual Higher</label>
        </rules>
        <rules>
            <name>Subscription_Higher</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Get_LPM.Subscription_Tier_Immunity_Level__r.SequenceNumber</leftValueReference>
                <operator>GreaterThan</operator>
                <rightValue>
                    <elementReference>Get_LPM.Manual_Tier_Immunity_Level__r.SequenceNumber</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <isGoTo>true</isGoTo>
                <targetReference>Assign_Sequence_Number2</targetReference>
            </connector>
            <label>Subscription Higher</label>
        </rules>
        <rules>
            <name>Same_Nr</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Get_LPM.Manual_Tier_Immunity_Level__r.SequenceNumber</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <elementReference>Get_LPM.Subscription_Tier_Immunity_Level__r.SequenceNumber</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <isGoTo>true</isGoTo>
                <targetReference>Assign_Sequence_Number2</targetReference>
            </connector>
            <label>Same Nr</label>
        </rules>
    </decisions>
    <decisions>
        <name>Check_Tier</name>
        <label>Check Tier</label>
        <locationX>842</locationX>
        <locationY>1166</locationY>
        <defaultConnector>
            <targetReference>Remain_in_Same_Tier_Assignment</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Remain in the same tier</defaultConnectorLabel>
        <rules>
            <name>Change_to_Avantage</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Get_Status_Points_Currency.PointsBalance</leftValueReference>
                <operator>GreaterThanOrEqualTo</operator>
                <rightValue>
                    <elementReference>Get_Avantage_Tier.Minimum_Threshold__c</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Get_Status_Points_Currency.PointsBalance</leftValueReference>
                <operator>LessThanOrEqualTo</operator>
                <rightValue>
                    <elementReference>Get_Avantage_Tier.Maximum_Threshold__c</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>vOldTierName</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue>Avantage</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>vOldTierSequenceNumber</leftValueReference>
                <operator>LessThan</operator>
                <rightValue>
                    <elementReference>Get_Avantage_Tier.SequenceNumber</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Avantage</targetReference>
            </connector>
            <label>Change to Avantage</label>
        </rules>
        <rules>
            <name>Change_to_Carte_Blanche</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Get_Status_Points_Currency.PointsBalance</leftValueReference>
                <operator>GreaterThanOrEqualTo</operator>
                <rightValue>
                    <elementReference>Get_Carte_blanche_Tier.Minimum_Threshold__c</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Get_Status_Points_Currency.PointsBalance</leftValueReference>
                <operator>LessThanOrEqualTo</operator>
                <rightValue>
                    <elementReference>Get_Carte_blanche_Tier.Maximum_Threshold__c</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>vOldTierName</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue>Carte blanche</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>vOldTierSequenceNumber</leftValueReference>
                <operator>LessThan</operator>
                <rightValue>
                    <elementReference>Get_Carte_blanche_Tier.SequenceNumber</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Carte_Blanche</targetReference>
            </connector>
            <label>Change to Carte Blanche</label>
        </rules>
        <rules>
            <name>Change_to_Etoile</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Get_Status_Points_Currency.PointsBalance</leftValueReference>
                <operator>GreaterThanOrEqualTo</operator>
                <rightValue>
                    <elementReference>Get_Etoile_Tier.Minimum_Threshold__c</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>vOldTierName</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue>Etoile</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>vOldTierSequenceNumber</leftValueReference>
                <operator>LessThan</operator>
                <rightValue>
                    <elementReference>Get_Etoile_Tier.SequenceNumber</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Etoile</targetReference>
            </connector>
            <label>Change to Etoile</label>
        </rules>
    </decisions>
    <decisions>
        <name>Check_What_Triggered_FLow</name>
        <label>Check What Triggered FLow</label>
        <locationX>842</locationX>
        <locationY>1466</locationY>
        <defaultConnector>
            <targetReference>Update_Member_Tier</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Loyalty_Purchase_a_Ticket</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>vTicket</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Assign_Reason_for_Change</targetReference>
            </connector>
            <label>Loyalty - Purchase a Ticket</label>
        </rules>
        <rules>
            <name>Loyalty_Manual_Actions</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>vManualActions</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Assign_Reason_for_Change1</targetReference>
            </connector>
            <label>Loyalty - Manual Actions</label>
        </rules>
        <rules>
            <name>Loyalty_Transaction_Cancellations_Accrual</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>vTransactionCancellationAccrual</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Assign_Reason_for_Change2</targetReference>
            </connector>
            <label>Loyalty - Transaction Cancellations Accrual</label>
        </rules>
    </decisions>
    <decisions>
        <name>LPM_Have_Tier_Immunity</name>
        <label>LPM Have Tier Immunity ?</label>
        <locationX>842</locationX>
        <locationY>674</locationY>
        <defaultConnector>
            <targetReference>Assign_Sequence_Number</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>No</defaultConnectorLabel>
        <rules>
            <name>Yes_Manual_Tier_Immunity</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Get_LPM.Manual_Tier_Immunity_Level__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Get_LPM.Subscription_Tier_Immunity_Level__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Assign_Sequence_Number1</targetReference>
            </connector>
            <label>Yes Manual Tier Immunity</label>
        </rules>
        <rules>
            <name>Yes_SubscriptionTier_Immunity</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Get_LPM.Manual_Tier_Immunity_Level__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Get_LPM.Subscription_Tier_Immunity_Level__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Assign_Sequence_Number2</targetReference>
            </connector>
            <label>Yes SubscriptionTier Immunity</label>
        </rules>
        <rules>
            <name>Yes_and_Both_Tier_Immunity_Set</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Get_LPM.Manual_Tier_Immunity_Level__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Get_LPM.Subscription_Tier_Immunity_Level__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Check_Higher_Tier_Sequence_Nr</targetReference>
            </connector>
            <label>Yes Both Tier Immunity Set</label>
        </rules>
    </decisions>
    <decisions>
        <name>Ticket_Purchase</name>
        <label>Ticket Purchase ?</label>
        <locationX>842</locationX>
        <locationY>2282</locationY>
        <defaultConnector>
            <targetReference>Update_LPM_Status_Points_Fields</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Others</defaultConnectorLabel>
        <rules>
            <name>Yes</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>vTicket</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Update_LPM_LastActivityDate_and_Status_Points_Fields</targetReference>
            </connector>
            <label>Yes</label>
        </rules>
    </decisions>
    <decisions>
        <name>Tier_Expiration_Date</name>
        <label>Tier Expiration Date</label>
        <locationX>842</locationX>
        <locationY>1982</locationY>
        <defaultConnector>
            <targetReference>Ticket_Purchase</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Not_NextResetDate_Plus_One_Year</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Get_New_Member_Tier.TierExpirationDate</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <elementReference>fNextResetPlusOneYear</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>vRemainInTier</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Update_New_Member_Tier</targetReference>
            </connector>
            <label>Not NextResetDate Plus One Year</label>
        </rules>
    </decisions>
    <environments>Default</environments>
    <formulas>
        <name>fNextResetPlusOneYear</name>
        <dataType>Date</dataType>
        <expression>IF( MONTH({!Get_Status_Points_Currency.NextResetDate}) = 2 &amp;&amp; DAY({!Get_Status_Points_Currency.NextResetDate}) = 29, DATE(YEAR({!Get_Status_Points_Currency.NextResetDate}) + 1,2, 28), 
    DATE(YEAR({!Get_Status_Points_Currency.NextResetDate})+ 1, MONTH({!Get_Status_Points_Currency.NextResetDate}), DAY({!Get_Status_Points_Currency.NextResetDate}))
)</expression>
    </formulas>
    <formulas>
        <name>fStatusPointsToNextTier</name>
        <dataType>Number</dataType>
        <expression>IF(ISBLANK({!Get_New_Member_Tier.LoyaltyTier.Maximum_Threshold__c}), 
{!Get_New_Member_Tier.LoyaltyTier.Maximum_Threshold__c}+ 1,
 ({!Get_New_Member_Tier.LoyaltyTier.Maximum_Threshold__c} - {!Get_Status_Points_Currency.PointsBalance}) +1)</expression>
        <scale>2</scale>
    </formulas>
    <interviewLabel>Loyalty - Tier Upgrade {!$Flow.CurrentDateTime}</interviewLabel>
    <label>Loyalty - Subflow Tier Upgrade</label>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordLookups>
        <name>Get_Avantage_Tier</name>
        <label>Get Avantage Tier</label>
        <locationX>842</locationX>
        <locationY>242</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Get_Carte_blanche_Tier</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Name</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Avantage</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>LoyaltyTier</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_Carte_blanche_Tier</name>
        <label>Get Carte blanche Tier</label>
        <locationX>842</locationX>
        <locationY>350</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Get_Etoile_Tier</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Name</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Carte blanche</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>LoyaltyTier</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_Etoile_Tier</name>
        <label>Get Etoile Tier</label>
        <locationX>842</locationX>
        <locationY>458</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Get_Status_Points_Currency</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Name</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Etoile</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>LoyaltyTier</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_LPM</name>
        <label>Get LPM</label>
        <locationX>842</locationX>
        <locationY>134</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Get_Avantage_Tier</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>vLPMId</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>LoyaltyProgramMember</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_New_Member_Tier</name>
        <label>Get New Member Tier</label>
        <locationX>842</locationX>
        <locationY>1874</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Tier_Expiration_Date</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>LoyaltyMemberId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>vLPMId</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>LoyaltyMemberTier</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_Status_Points_Currency</name>
        <label>Get Status Points Currency</label>
        <locationX>842</locationX>
        <locationY>566</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>LPM_Have_Tier_Immunity</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>LoyaltyMemberId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>vLPMId</elementReference>
            </value>
        </filters>
        <filters>
            <field>Name</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Status Points</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>LoyaltyMemberCurrency</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordUpdates>
        <name>Update_LPM_LastActivityDate_and_Status_Points_Fields</name>
        <label>Update LPM LastActivityDate and Status Points Fields</label>
        <locationX>710</locationX>
        <locationY>2390</locationY>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>vLPMId</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>LastActivityDate</field>
            <value>
                <elementReference>$Flow.CurrentDateTime</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>StatusPointsToRemainInTier__c</field>
            <value>
                <elementReference>Get_New_Member_Tier.LoyaltyTier.Minimum_Threshold__c</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Status_Points_To_Next_Tier__c</field>
            <value>
                <elementReference>fStatusPointsToNextTier</elementReference>
            </value>
        </inputAssignments>
        <object>LoyaltyProgramMember</object>
    </recordUpdates>
    <recordUpdates>
        <name>Update_LPM_Status_Points_Fields</name>
        <label>Update LPM Status Points Fields</label>
        <locationX>974</locationX>
        <locationY>2390</locationY>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>vLPMId</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>StatusPointsToRemainInTier__c</field>
            <value>
                <elementReference>Get_New_Member_Tier.LoyaltyTier.Minimum_Threshold__c</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Status_Points_To_Next_Tier__c</field>
            <value>
                <elementReference>fStatusPointsToNextTier</elementReference>
            </value>
        </inputAssignments>
        <object>LoyaltyProgramMember</object>
    </recordUpdates>
    <recordUpdates>
        <name>Update_Member_Tier</name>
        <label>Update Member Tier</label>
        <locationX>842</locationX>
        <locationY>1766</locationY>
        <connector>
            <targetReference>Get_New_Member_Tier</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>LoyaltyMemberId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>vLPMId</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>ReasonForChange</field>
            <value>
                <elementReference>vReasonForChange</elementReference>
            </value>
        </inputAssignments>
        <object>LoyaltyMemberTier</object>
    </recordUpdates>
    <recordUpdates>
        <name>Update_New_Member_Tier</name>
        <label>Update New Member Tier</label>
        <locationX>710</locationX>
        <locationY>2090</locationY>
        <connector>
            <targetReference>Ticket_Purchase</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>Get_New_Member_Tier.Id</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>TierExpirationDate</field>
            <value>
                <elementReference>fNextResetPlusOneYear</elementReference>
            </value>
        </inputAssignments>
        <object>LoyaltyMemberTier</object>
    </recordUpdates>
    <start>
        <locationX>716</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>Get_LPM</targetReference>
        </connector>
    </start>
    <status>Active</status>
    <variables>
        <name>vLPMId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>vManualActions</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>vOldMemberTierNumber</name>
        <dataType>Number</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
        <scale>2</scale>
    </variables>
    <variables>
        <name>vOldTierName</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>vOldTierSequenceNumber</name>
        <dataType>Number</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <scale>0</scale>
    </variables>
    <variables>
        <name>vReasonForChange</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>vRemainInTier</name>
        <dataType>Boolean</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <value>
            <booleanValue>false</booleanValue>
        </value>
    </variables>
    <variables>
        <name>vTicket</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>vTransactionCancellationAccrual</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
    </variables>
</Flow>
