<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <apiVersion>52.0</apiVersion>
    <decisions>
        <name>Is_Still_Open</name>
        <label>Is Still Open</label>
        <locationX>297</locationX>
        <locationY>352</locationY>
        <defaultConnector>
            <targetReference>Display_Already_Closed</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Closed</defaultConnectorLabel>
        <rules>
            <name>Open</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Disruption_Case.Status__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Open</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Update_Disruption_Case_as_Refunded</targetReference>
            </connector>
            <label>Open</label>
        </rules>
    </decisions>
    <interviewLabel>Disruption - Refund Done {!$Flow.CurrentDateTime}</interviewLabel>
    <label>Disruption - Refund Done</label>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>FREE_FORM_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>Flow</processType>
    <recordCreates>
        <name>Create_Refund_Done_Case_Comment</name>
        <label>Create Refund Done Case Comment</label>
        <locationX>838</locationX>
        <locationY>162</locationY>
        <connector>
            <targetReference>Display_Done</targetReference>
        </connector>
        <inputAssignments>
            <field>CommentBody</field>
            <value>
                <stringValue>---------- Refund done ----------</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>ParentId</field>
            <value>
                <elementReference>recordId</elementReference>
            </value>
        </inputAssignments>
        <object>CaseComment</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordCreates>
    <recordLookups>
        <name>Get_Disruption_Case</name>
        <label>Get Disruption Case</label>
        <locationX>171</locationX>
        <locationY>207</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Is_Still_Open</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Case_Id__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>recordId</elementReference>
            </value>
        </filters>
        <object>Disruption_Case__c</object>
        <outputReference>Disruption_Case</outputReference>
        <queriedFields>Id</queriedFields>
        <queriedFields>Status__c</queriedFields>
    </recordLookups>
    <recordUpdates>
        <name>Update_Disruption_Case_as_Refunded</name>
        <label>Update Disruption Case as Refunded</label>
        <locationX>561</locationX>
        <locationY>163</locationY>
        <connector>
            <targetReference>Create_Refund_Done_Case_Comment</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>Disruption_Case.Id</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>Status__c</field>
            <value>
                <stringValue>Refunded</stringValue>
            </value>
        </inputAssignments>
        <object>Disruption_Case__c</object>
    </recordUpdates>
    <screens>
        <name>Display_Already_Closed</name>
        <label>Display Already Closed</label>
        <locationX>534</locationX>
        <locationY>487</locationY>
        <allowBack>false</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>false</allowPause>
        <fields>
            <name>Already_Closed_Message</name>
            <fieldText>&lt;p&gt;&lt;span style=&quot;font-size: 14.6667px; font-family: Arial;&quot;&gt;Already closed as {!Disruption_Case.Status__c}.&lt;/span&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <showFooter>false</showFooter>
        <showHeader>false</showHeader>
    </screens>
    <screens>
        <name>Display_Done</name>
        <label>Display Done</label>
        <locationX>1017</locationX>
        <locationY>162</locationY>
        <allowBack>false</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>false</allowPause>
        <fields>
            <name>Done_Message</name>
            <fieldText>&lt;p&gt;&lt;span style=&quot;font-family: Arial; font-size: 14.6667px;&quot;&gt;Done !&lt;/span&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>false</showHeader>
    </screens>
    <start>
        <locationX>50</locationX>
        <locationY>50</locationY>
        <connector>
            <targetReference>Get_Disruption_Case</targetReference>
        </connector>
    </start>
    <status>Active</status>
    <variables>
        <name>Disruption_Case</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>Disruption_Case__c</objectType>
    </variables>
    <variables>
        <name>recordId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
    </variables>
</Flow>
