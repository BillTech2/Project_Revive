<apex:page showHeader="false" controller="LiveChatPostChatPageController">
<head>


    <meta name="viewport" content="width=device-width, initial-scale=1"/>
    <style type="text/css">
        .loader-wrapper {
            height: 100%;
            left: 0;
            position: fixed;
            top: 0;
            width: 100%;
        }
        
        .loader {
            left: 50%;
            margin-left: -32px;
            position: absolute;
            top: 108px;
        }
    </style>
 </head>
 <body>
 

    <div class="loader-wrapper">
        <img id="preloaderbg" class="loader" src="{!URLFOR($Resource.livechatbranding,'loader-new.gif')}" width="64" height="64" />
    </div>


    <div id='details' style="display: none;">

        <h1>Post Chat Page</h1>

        Request Time: <apex:outputText id="c_rt" value="{!$CurrentPage.parameters.requestTime}" /><br/>
        Start Time: <apex:outputText id="c_st" value="{!$CurrentPage.parameters.startTime}" /><br/>
        Deployment Id: <apex:outputText value="{!$CurrentPage.parameters.deploymentId}" /><br/>
        Button Id: <apex:outputText value="{!$CurrentPage.parameters.buttonId}"/><br/>
        Chat Key: <apex:outputText value="{!$CurrentPage.parameters.chatKey}"/><br />
        Last Visited Page: <apex:outputText value="{!$CurrentPage.parameters.lastVisitedPage}" /><br/>
        Original Referrer: <apex:outputText value="{!$CurrentPage.parameters.originalReferrer}" /><br/>
        Latitude: <apex:outputText value="{!$CurrentPage.parameters.latitude}"/><br/>
        Longitude: <apex:outputText value="{!$CurrentPage.parameters.longitude}"/><br/>
        City: <apex:outputText value="{!$CurrentPage.parameters.city}" /><br/>
        Region: <apex:outputText value="{!$CurrentPage.parameters.region}" /><br/>
        Country: <apex:outputText value="{!$CurrentPage.parameters.country}"/><br/>
        Organization: <apex:outputText value="{!$CurrentPage.parameters.organization}" /><br/>
        Disconnected By: <apex:outputText value="{!$CurrentPage.parameters.disconnectedBy}" /><br/>
        Window Language: <apex:outputText value="{!$CurrentPage.parameters.windowLanguage}" /><br/>
        Chat Details: <apex:outputText value="{!$CurrentPage.parameters.chatDetails}" /><br />
        Transcript: <apex:outputText value="{!$CurrentPage.parameters.transcript}"/><br/>
        Attached Records : <apex:outputText value="{!$CurrentPage.parameters.attachedRecords}" /><br />
        Error: <apex:outputText value="{!$CurrentPage.parameters.error}" /><br/>
    </div>
    
    <!--div id='abandoned' style='display: none;'>
        
    </div-->
    <div id='abandoned' style='display: none;'>
        
    </div>
    <c:esrCookies ></c:esrCookies>
    <script src="{!URLFOR($Resource.LiveAgent,'/js/json_parse.js')}"></script>
    <script type='text/javascript'>
        var requestTime = '{!$CurrentPage.parameters.requestTime}';
        var startTime = '{!$CurrentPage.parameters.startTime}';
        if (!startTime) {
            document.getElementById('details').style.display = 'none';
            document.getElementById('abandoned').style.display = 'block';
        }
        var chatDetails = JSON.parse('{!JSENCODE($CurrentPage.parameters.chatDetails)}');
        console.log(chatDetails);
        console.log('{!$CurrentPage.parameters.chatKey}');
        var hostUrl;
        var esrPageParams = {};

        var today = new Date();
        timeNow = [
            [today.getDate(),
            today.getMonth() > 10?
            today.getMonth():'0' + today.getMonth(),
            today.getFullYear()].join('/'),
            [today.getHours(),today.getMinutes(),today.getSeconds()].join(':')
            ].join(' ');//chatBody[i].getTimestamp();
            console.log(timeNow);

        function setHostUrl(chasitor){
            var details = chasitor;
            if(details && Array.isArray(details.customDetails)){
                details.customDetails.forEach(function(detail){
                    esrPageParams[detail.label] = detail.value;
                })
            }
            if(details && Array.isArray(details.prechatDetails)){
                details.prechatDetails.forEach(function(detail){
                    esrPageParams['prechat_' + detail.label] = detail.value;
                })
            }
            var chasitorUrl = esrPageParams['prechat_hostUrl'] || esrPageParams['hostUrl'];
            if(chasitorUrl){
              hostUrl = chasitorUrl;
            }
        }
        
        function isNewWindow() {
            return esrPageParams.newWindow === 'true';
        }

        setHostUrl(chatDetails);
        if (isNewWindow()) {
            ESR.afterRedirect();
        }

        window.addEventListener("beforeunload", function(args){
            if(isNewWindow()){
                ESR.beforeUnload();
            }
        });

        // function postEventMessage(event, payload){
        //     //var postEventWindow = esrPageParams.newWindow ? window.opener : window.parent;
        //     var postEventWindow = window.parent;
        //     postEventWindow.postMessage({
        //         event: event,
        //         payload: payload
        //     }, hostUrl);
        // }
        /*window.addEventListener("unload", function(args){
            console.log('unload');
            console.log(args);
            if(esrPageParams.newWindow === 'true'){
               postEventMessage('postChatFinished', { status: window.closed });
            }
        });

        window.addEventListener("blur", function(args){
            console.log('blur');
            postEventMessage('chatWindowMinimized', { status: window.closed });
        });*/
        //debugger
        Visualforce.remoting.Manager.invokeAction(
                    '{!$RemoteAction.LiveChatPostChatPageController.goToSurvayPage}', 
                            '{!$CurrentPage.parameters.disconnectedBy}', 
                            '{!$CurrentPage.parameters.chatKey}', 
                            '{!JSENCODE($CurrentPage.parameters.chatDetails)}',
                            '{!JSENCODE($CurrentPage.parameters.attachedRecords)}',
                            hostUrl,  timeNow, isNewWindow() ? 'true' : 'false', esrPageParams.instanceId === undefined ? '' : esrPageParams.instanceId,
                    function(result, event){
                        console.log('Survey redirect URL: ' + result);
                        if (result) {
                            if (isNewWindow()) {
                                ESR.beforeRedirect();
                            }
                            document.location.href = result.replace(/amp;/g,'');
                        };
                    },
                    {escape: true}
                );
    </script>
    </body>
</apex:page>